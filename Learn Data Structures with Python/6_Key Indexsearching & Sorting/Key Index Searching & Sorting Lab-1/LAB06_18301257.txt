#task1--------------------

def maximum(arr):
    maxe = arr[0]
    for a in arr:
        if  maxe < abs(a):
              maxe = abs(a)
    return  maxe

class keyIndex:
    def __init__(self, k1):
        self.k1 = k1

    def k_index(self):
        global maxval
        maxval = maximum(self.k1)
        self.tem = [0] * ((maximum(self.k1)*2)+1)

        for i in self.k1:
            if 0 == self.tem[maxval + i]:
                self.tem[maxval + i] = 1
            else:
                self.tem[maxval+i] = self.tem[maxval+i]+1


    def searched(self,k_ey):
       k_1 = int(k_ey)
       if 0 >  k_1+maxval or  k_1+maxval >= len(self.tem):
            print(False)
       else:
            print(True)

    def sorting(self):
        index_x = 0
        for x in range(0, len(self.tem)):
            if len(self.k1) <= index_x:
                print(self.k1)
                break
            if 1 <= self.tem[x]:
                for y in range(0, self.tem[x]):
                    self.k1[index_x] = x - maxval
                    index_x = index_x + 1


arr = [-2,-8,3,5,5]
k_index = keyIndex(arr)
k_index.k_index()
k_index.searched(3)
k_index.sorting()



#task2--------------------------


class hash():

  def __init__(self):
    self.arr=[None]*9

  def hashq(self,h):
    count=0
    n=0
    alp="abcdefghijklmnopqrstuvwxyz"
    num="1234567890"
    for i in h:
      if i in alp:
        count=count+1
      elif i in num:
        n=n+int(i)
    hashq=(count+24+n)%9
    if self.arr[hashq]==0:
      self.arr[hashq]=h
    else:
      i=hashq+1
      while i in range(len(self.arr)):
        if self.arr[i]==0:
          self.arr[i]=h
          break
        i=i+1
        if i==len(self.arr):
          i=0
        print(i)
  
    print(self.arr)

h = hash()
h.hashq('ST1E89B8A32')