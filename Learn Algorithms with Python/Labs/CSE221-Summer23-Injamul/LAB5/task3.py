# -*- coding: utf-8 -*-
"""task3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/167aDpjkmMqUomgBqD0_-SiFghnPMPrRY
"""

##3

def BGUG(f): 

    l1= f.readline().strip()
    l=int(l1)
    graph = {}
    counter = 0

    while (counter<l):
        line = f.readline()
        a,b,c = line.split(" ") 
        c=int(c) 
      
        if(a in graph):
            x=(a,c)
            graph[a].append(x)
        else:
            x=(a,c)
            graph[a] = [x]

        if(b in graph):
            x=(a,c)
            graph[b].append(x)
        else:
            x=(a,c)
            graph[b] = [x]

        counter+=1 



def f(grph,a, d):
  if len(a)<1:
    p=[]
    p.append(str(d))
    return p
  else:
    s="1"
    import math
    b=[math.inf]*len(a) 
    c=["No"]*len(a) 
    QQ=[None]*len(a)
    b[a.idx (s)]=0 
    while "No" in c: 
      min=math.inf  
      minidx=math.inf
      for i in range(len(b)):
        if c[i]=="No" and (b[i])< min:
          min=b[i]
          minidx=i
      m=a[minidx]
      if m in grph.keys(): 
        for n in grph[m]:
          if int(b[minidx])+n[1]<(b[a.idx(n[0])]):
            b[a.idx(n[0])]=int(b[minidx]+n[1])
            f[a.idx(n[0])]=m
            
      c[a.idx(m)]="Yes" 
      d=str(d) #
      p=[]
      p.append(d) 
      k=0
      while k==0:
        if f[a.idx(p[len(p):
          p.append(f[a.idx("---")]
        else:
          p.append(f[a.idx()
          k=1 
      return p
    return k(graph,a,N)


input5_3=open("/content/drive/MyDrive/Lab05/input05-3.txt","r") 
output5_3=open("/content/drive/MyDrive/Lab05/output05-3.txt","w")



aws=input5_3.readline()
aws=int(aws)
AA=""
for x in range(aws):
  a=[]
  p=BGUG(input5_3)
  for x in range(len(p)-1,-1,-1): 
    AA+=p[x]
    AA+="
  AA+=" \n"
print(AA, file=output5_3)