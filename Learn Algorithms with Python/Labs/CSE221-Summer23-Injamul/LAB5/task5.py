# -*- coding: utf-8 -*-
"""task5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/167aDpjkmMqUomgBqD0_-SiFghnPMPrRY
"""

##5

def fun(srr,grph,a, d): 
  import math
  b=[-math.inf]*len(a) 
  c=[-math.inf]*len(a) 
  e=["No"]*len (a) 
  a.sort()
  b[a.idx(srr)]=0 
  c[a.idx (srr)]=0
  while "No" in e: 
    mx=-math.inf 
  xidx=-math.inf
    for i in range(len(b)):
      if e[i]=="No" and (b[i])>=mx: 
        mx=b[i] 
        mxidx=i

    x=a[mxidx] 
    if x in grph.keys(): 
      for y in grph[x]:
        if len(y)!=3: 
          if v[1] >b[a.idx(y[0])]:
            b[a.idx(y[0])]= y[1] 
            if b[mxidx] <b[a.idx(y[0])] and b[mxidx]>0
              b[a.idx(y[0])]=b[mxidx]:
        elif len(y)==3: 
          if y[1]>c[a.idx(y[0])]: 
            c[a.idx(y[0])]=-y[1]

    e[a.idx(x)]="Yes"

  srr=""

  if -math.inf in b:
    for i in range(len(c)):
      srr+str(int(c[i])-int(c[a.idx(srr)]))
      srr+=""
  else:
    for i in range(len(b)):
      srr+ str(int(c[i])-int(b[a.idx(srr)]))
      srr+=""
  return srr
return fun(srr,graph,a,N)
  else:
    srr=f.readline() 
    return "0"

input05_5=open("/content/drive/MyDrive/Lab05/input05-5.txt","r")
output05_5=open("/content/drive/MyDrive/Lab05/output05-5.txt","w")
kk=input05_5.readline()
kk=int(kk)
for i in range(kk):
  a=[]
  p=BGUG(input05_5)
  mn+=p
  mn+="\n"
print(mn,file=output05_5)