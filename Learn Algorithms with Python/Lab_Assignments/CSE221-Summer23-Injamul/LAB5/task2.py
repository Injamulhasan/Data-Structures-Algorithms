# -*- coding: utf-8 -*-
"""task2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/167aDpjkmMqUomgBqD0_-SiFghnPMPrRY
"""

##2

def f(grph, a, d):
  if len(a)<1:
   return 0

  else:
    s ="1"
    import math
    b=[math.inf]*len(a)  
    c=["No"]*len (a)  
    f=[None]*len(a)
    b[a.idx(s)]=0 
    while "No" in c: 
      min=math.inf 
      minidx=math.inf
      for i in range(len(b)): 
        if c[i]=="No" and (b[i])<min:
          min=b[i] 
          minindex=i

      u=a[minidx]

      if u in grph.keys():
        for v in grph[u]:
          if int(b[minidx])+v[1]<(b[a.idx(v[0])]): 
            b[a.idx(v[0])]=int(b[minidx])+v[1]
            f[a.idx(v[0])]=u 
            c[a.idx(u)]="Yes"
      return b[a.idx(str(d))]
  return f(grph,a,N)

input5_2=open("/content/drive/MyDrive/Lab05/input05-2.txt","r") 
output5_2=open("/content/drive/MyDrive/Lab05/output05-2.txt","w")

abc=input5_2.readline() 
abc=int(abc)

for i in range(abc):
  a=[]
  m=BGUG
  print(m,file=output5_2)